)
return.frame <- rev(return.frame$Event)
View(return.frame)
PAs <- NULL
?cbind
?name
name(test) <- test1
name(test) <- "test1"
as.name("troum001")
name(test) <- as.name("troum001")
name(test)= as.name("troum001")
source('~/Baseball/Retrosheet/StabilityFuncs.R')
i <- NULL
hitterdata <- NULL
source('~/Baseball/Retrosheet/StabilityFuncs.R')
source('~/Baseball/Retrosheet/StabilityFuncs.R')
source('~/Baseball/Retrosheet/StabilityFuncs.R')
source('~/Baseball/Retrosheet/StabilityFuncs.R')
save.image("~/Baseball/Retrosheet/Stability.RData")
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PAs <- lagged.PAs(BatterData2013$retroID)
View(PAs)
PAs$row.names <- NULL;
row.names(PAs) <- NULL;
View(PAs)
row.names(PAs) <- BatterData2013$retroID[1:5]
row.names(PAs) <- BatterData2013$retroID
row.names(PAs) <- 1:949
?row.names
PAs <- lagged.PAs(BatterData2013$retroID)
row.names(PAs) <- BatterData2013$retroID[1:5,]
BatterData2013$retroID[1:5,]
BatterData2013$retroID[1:5]
row.names(PAs) <- BatterData2013$retroID[1:5]
View(row.names)
View(PAs)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PAs <- lagged.PAs(BatterData2013$retroID)
View(PAs)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PAs <- lagged.PAs(BatterData2013$retroID)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PAs <- lagged.PAs(BatterData2013$retroID)
View(PAs)
save.image("~/Baseball/Retrosheet/Stability.RData")
trout2013 <- subset(Stable2013, Batter=="troum001")
View(trout2013)
test <- cbind(BatterData2013, PAs)
View(test)
BatterData2013 <- test
View(BatterData2013)
trout2013 <- NULL;
test <- NULL;
PAs <- NULL;
save.image("~/Baseball/Retrosheet/Stability.RData")
View(BatterData2013)
View(BatterData2013)
?write.csv
write.csv(BatterData2013, file="BatterData2013.csv")
View(Stable2013)
PitcherData2013 <- data.frame(unique(Stable2013$Pitcher))
View(PitcherData2013)
names(PitcherData2013) <- c("Pitchers")
names(PitcherData2013) <- c("Pitcher")
View(PitcherData2013)
save.image("~/Baseball/Retrosheet/Stability.RData")
View(all2013)
subset(c(1,2,3))
subset(c(1,2,3), 3)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
source('~/Baseball/Retrosheet/StabilityFuncs.R')
source('~/Baseball/Retrosheet/StabilityFuncs.R')
View(PitcherData2013)
PitcherData2013$FIP <- fill.FIP(PitcherData2013$Pitcher)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PitcherData2013$FIP <- fill.FIP(PitcherData2013$Pitcher)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PitcherData2013$FIP <- fill.FIP(PitcherData2013$Pitcher)
View(PitcherData2013)
View(names)
get.FIP("sabac01", all2013)
i <- subset(pitcher.frame, ResP == ID)
i <- subset(all2013, ResP == "sabac01")
View(i)
i <- subset(all2013, ResP == "kersc001")
View(i)
get.FIP("sabac001", all2013)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
get.FIP("sabac001", all2013)
PitcherData2013$FIP <- fill.FIP(PitcherData2013$Pitcher)
View(names)
View(PitcherData2013)
source('~/Baseball/Retrosheet/StabilityFuncs.R')
PitcherData2013$FIP <- fill.FIP(PitcherData2013$Pitcher)
View(PitcherData2013)
View(i)
i <- subset(i, is.PA(Event))
source('~/Baseball/Retrosheet/StabilityFuncs.R')
?data.table
??data.table
?RSQLite
??RSQLite
rm(all2013)
load("C:/Users/matth_000/Documents/Baseball/Retrosheet/Stability.RData")
?glm
glm(n ~ n_1, family = binomial(logit), BatterRBF)
args <- c("n_1", "n_2")
glm(n ~ args, family = binomial(logit), BatterRBF)
glm(n ~ ., family = binomial(logit), BatterRBF)
glm(n ~ n_1 + n_2, family = binomial(logit), BatterRBF)
args <- as.list(args)
glm(n ~ args, family = binomial(logit), BatterRBF)
args <- as.vector(args)
glm(n ~ args, family = binomial(logit), BatterRBF)
args <- unlist(args)
glm(n ~ args, family = binomial(logit), BatterRBF)
args <- "n_1 + n_2"
glm(n ~ args, family = binomial(logit), BatterRBF)
args <- n_1 + n_2"
args <- n_1 + n_2
load("C:/Users/matth_000/Documents/Baseball/pitchFX/pitchFXworkspace.RData")
install.packages("ResourceSelection")
rm(i)
?rm
rm(...)
rm(Data)
rm(BatterData2013, PitcherData2013, all2013, i, names, BatterData, Hitters, LahmanData, PAs, hitterdata, return.frame, test, trout2013, wOBAs)
rm(Stable2013)
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("SML")
usePackage("XML")
Transactions = readHTMLTable(http://transactions.mlbtraderumors.com/widget/transactions-tracker&link=true&widget=true&amount_type=4&startDate=10/01/2009&lang=41, header=T, which=1,stringsAsFactors=F)
Transactions = readHTMLTable("http://transactions.mlbtraderumors.com/widget/transactions-tracker&link=true&widget=true&amount_type=4&startDate=10/01/2009&lang=41", header=T, which=1,stringsAsFactors=F)
View(Transactions)
rm(BatterData2013, PitcherData2013, Stable2013, all2013, i, names, BatterData, Hitters, LahmanData, PAs, hitterdata, return.frame, test, trout2013, wOBAs)
getwd()
Payrolls <- read.csv("Baseball/offseason/payrolls.csv")
View(Payrolls)
payroll.frame <- NULL;
for (i in 2014:2005) {
placeholder = Payrolls
test = cbind(paste(placeholder[, 1], i, sep=""), placeholder[, 2:5])
payroll.frame = rbind(payroll.frame, test)
placeholder = placeholder[, -c(2)]
}
View(payroll.frame)
names(payroll.frame) <- c("teamyear", "n", "n-1", "n-2", "n-3")
lm(n ~ n-1 + n-2 + n-3 + 0, payroll.frame)
names(payroll.frame) <- c("teamyear", "n", "n1", "n2", "n3")
lm(n ~ n1 + n2 + n3 + 0, payroll.frame)
lm(n ~ n1 + n2 + n3, payroll.frame)
summary(lm(n ~ n1 + n2 + n3, payroll.frame))
summary(lm(n ~ n1, payroll.frame))
summary(lm(n ~ n1 + 0, payroll.frame))
View(payroll.frame)
?grep
payroll.frame$bigmarket <- ifelse(grep("Yankees",  payroll.frame$teamyear) ||
grep("Mets", payroll.frame$teamyear)     ||
grep("Dodgers", payroll.frame$teamyear)  ||
grep("Angels", payroll.frame$teamyear),
1, 0)
View(payroll.frame)
list = 0;
for (i in 1:nrow(payroll.frame)) {
ifelse(grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"]),
list = c(list, 1), list = c(list, 0))
}
list = 0;
for (i in 1:nrow(payroll.frame)) {
if (grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"]))
list = c(list, 1);
else
list = c(list, 0))
}
list = NULL;
for (i in 1:nrow(payroll.frame)) {
if (grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"]))
list = c(list, 1);
else
list = c(list, 0))
}
list = NULL;
for (i in 1:nrow(payroll.frame)) {
if (grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"])) {
list = c(list, 1);
} else
list = c(list, 0))
}
list = NULL;
for (i in 1:nrow(payroll.frame)) {
if (grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"])) {
list = c(list, 1);
} else {
list = c(list, 0))
}
}
foo <- function() {
list = NULL;
for (i in 1:nrow(payroll.frame)) {
if (grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"])) {
list = c(list, 1);
} else {
list = c(list, 0))
}
}
return(list)
}
foo <- function() {
list = NULL;
for (i in 1:nrow(payroll.frame)) {
if (grep("Yankees",  payroll.frame[i, "teamyear"]) ||
grep("Mets", payroll.frame[i, "teamyear"])     ||
grep("Dodgers", payroll.frame[i, "teamyear"])  ||
grep("Angels", payroll.frame[i, "teamyear"])) {
list = c(list, 1);
} else {
list = c(list, 0)
}
}
return(list)
}
foo()
grep("Yankees", payroll.frame[i, "teamyear"])
grep("Yankees", payroll.frame[1, "teamyear"])
foo <- function() {
list = NULL;
for (i in 1:nrow(payroll.frame)) {
if (grepl("Yankees",  payroll.frame[i, "teamyear"]) ||
grepl("Mets", payroll.frame[i, "teamyear"])     ||
grepl("Dodgers", payroll.frame[i, "teamyear"])  ||
grepl("Angels", payroll.frame[i, "teamyear"])) {
list = c(list, 1);
} else {
list = c(list, 0)
}
}
return(list)
}
foo()
bigmarket <- foo()
payroll.frame$bigmarket <- bigmarket
rm(bigmarket, i, list)
rm(placeholder, test)
View(payroll.frame)
summary(lm(n ~ n1 + bigmarket + 0, payroll.frame))
summary(lm(n ~ n1 + bigmarket, payroll.frame))
grepl("Yankees", payroll.frame)
grepl("Yankees", payroll.frame$teamyear)
?substr
?grep
Teams <- read.csv(Baseball/lahman/Teams.csv)
getwd()
Teams <- read.csv("Baseball/lahman/Teams.csv")
Teams <- subset(Teams, yearID >= 2004 && yearID <= 2013)
Teams <- read.csv("Baseball/lahman/Teams.csv")
View(TEams)
View(Teams)
Teams <- subset(Teams, yearID >= 2004)
View(Teams)
?factor
unique(Teams$TeamID)
unique(Teams$teamID)
to.name <- function(init) {
switch(init,
"MIN" = "Twins")
}
to.name("MIN")
to.name <- function(init) {
switch(init,
"MIN" = "Twins",
"CHA" = "White Sox",
"CLE" = "Indians",
"DET" = "Tigers",
"KCA" = "Royals",
"NYA" = "Yankees",
"BOS" = "Red Sox",
"BAL" = "Orioles",
"TBA" = "Rays",
"TOR" = "Blue Jays",
"ANA" = "Angels",
"OAK" = "A's",
"TEX" = "Rangers",
"SEA" = "Mariners",
"SLN" = "Cardinals",
"HOU" = "Astros",
"CHN" = "Cubs",
"CIN" = "Reds",
"PIT" = "Pirates",
"MIL" = "Brewers",
"ATL" = "Braves",
"PHI" = "Phillies",
"FLO" = "Marlins",
"NYN" = "Mets",
"MON" = "Nationals",
"LAN" = "Dodgers",
"SFN" = "Giants",
"SDN" = "Padres",
"COL" = "Rockies",
"ARI" = "D'Backs",
"LAA" = "Angels",
"WAS" = "Nationals",
"MIA" = "Marlins"
)
}
to.name <- Vectorize(to.name)
teams$teamname = to.name(teamID)
teams$teamname = to.name(Teams$teamID)
warnings()
to.name <- function(init) {
switch(as.character(init),
"MIN" = "Twins",
"CHA" = "White Sox",
"CLE" = "Indians",
"DET" = "Tigers",
"KCA" = "Royals",
"NYA" = "Yankees",
"BOS" = "Red Sox",
"BAL" = "Orioles",
"TBA" = "Rays",
"TOR" = "Blue Jays",
"ANA" = "Angels",
"OAK" = "A's",
"TEX" = "Rangers",
"SEA" = "Mariners",
"SLN" = "Cardinals",
"HOU" = "Astros",
"CHN" = "Cubs",
"CIN" = "Reds",
"PIT" = "Pirates",
"MIL" = "Brewers",
"ATL" = "Braves",
"PHI" = "Phillies",
"FLO" = "Marlins",
"NYN" = "Mets",
"MON" = "Nationals",
"LAN" = "Dodgers",
"SFN" = "Giants",
"SDN" = "Padres",
"COL" = "Rockies",
"ARI" = "D'Backs",
"LAA" = "Angels",
"WAS" = "Nationals",
"MIA" = "Marlins"
)
}
to.name <- Vectorize(to.name)
teams$teamname = to.name(Teams$teamID)
Teams$teamname = to.name(Teams$teamID)
View(Teams)
Teams <- Teams[, c("teamname", "Rank", "DivWin", "WCWin", "WSWin", "W", "yearID")]
teams <- read.csv("Baseball/lahman/Teams.csv")
teams <- subset(teams, yearID >= 2004)
View(teams)
Teams <- cbind(Teams, teams$attendance)
View(Teams)
Teams$teamID <- paste(teamname, (yearID-1), sep="")
Teams$teamID <- paste(Teams$teamname, (Teams$yearID-1), sep="")
View(Teams)
Teams$teamID <- paste(Teams$teamname, (Teams$yearID+1), sep="")
View(Teams)
test <- merge(payroll.frame, Teams, by.x="teamyear", by.y="teamID")
View(test)
payroll.frame <- test
payroll.frame$playoffs <- with(payroll.frame, if (DivWin == "Y" || WCWin == "Y") 1 else 0)
View(payroll.frame)
payroll.frame$playoffs <- with(payroll.frame, if (DivWin == "Y" | WCWin == "Y") 1 else 0)
payroll.frame$playoffs <- with(payroll.frame, if (DivWin == "Y" || WCWin == "Y") 1 else 0)
?Vectorize
playoffs <- function(Div, WC) {if (Div == 'Y' || WC == 'Y') 1 else 0}
playoffs <- Vectorize(playoffs)
payroll.frame$playoffs <- with(payroll.frame, playoffs (DivWin, WCWin))
View(payroll.frame)
WS <- function(ser) {if (ser == 'Y') 1 else 0}
WS <- Vectorize(WS)
payroll.frame$WS <- with(payroll.frame, WS(WSWin))
View(payroll.frame)
summary(lm(n ~ n1 + n2 + n3 + bigmarket + playoffs + WS + W + teams$attendance, payroll.frame))
summary(lm(n ~ n2 + n3 + bigmarket + playoffs + WS + W + teams$attendance, payroll.frame))
summary(lm(n ~ n2 + n3 + playoffs + WS + W + teams$attendance, payroll.frame))
summary(lm(n ~ bigmarket + playoffs + WS + W + teams$attendance, payroll.frame))
summary(lm(n ~ bigmarket + playoffs + WS + teams$attendance, payroll.frame))
summary(lm(n ~ n1 + n2 + n3 + bigmarket + playoffs + WS + W + teams$attendance, payroll.frame))
summary(lm(n ~ n1 + n2 + n3 + bigmarket + playoffs + WS + W + teams$attendance + 0, payroll.frame))
summary(lm(n ~ n1 + bigmarket + playoffs + WS + W + teams$attendance + 0, payroll.frame))
summary(lm(n ~ n1 + n2 + n3 + bigmarket + playoffs + WS + W + teams$attendance + 0, payroll.frame))
summary(lm(n ~ n1 + bigmarket + playoffs + WS + W + teams$attendance + 0, payroll.frame))
summary(lm(n ~ n1 + W + 0, payroll.frame))
plot(n, W)
with(payroll.frame, plot(n, W))
loess(lines(n, W))
with(payroll.frame(loess(lines(n, W))))
with(payroll.frame,loess(lines(n, W)))
with(payroll.frame, plot(n ~ W))
with(payroll.frame, loess((n ~ W))
)
with(payroll.frame, loess(lines(n ~ W)))
with(payroll.frame, plot(n ~ W))
with(payroll.frame, lines(lowess(n ~ W)))
with(payroll.frame, lines(lowess(n ~ W + n1)))
with(payroll.frame, plot(n ~ W))
with(payroll.frame, plot(n ~ W + n1))
with(payroll.frame, plot(n ~ W + n1))
rm(teset)
rm(test)
rm(teams)
summary(lm(n ~ n1 + W + 0, payroll.frame))
library(plm)
install.packages("plm")
library(plm)
?plm
?scatterplot
??scatterplot
with(payroll.frame, plot(n ~ Team|yearID))
with(payroll.frame, plot(n ~ teamname|yearID))
??fixed
summary(lm(n ~ teamname))
summary(lm(n ~ teamname, payroll.frame))
summary(lm(n ~ teamname + 0, payroll.frame))
attach(payroll.frae)
attach(payroll.frame)
summary(lm(n ~ n1 + WS))
rm(WS)
summary(lm(n ~ n1 + WS))
summary(lm(n ~ n1 + WS + 0))
plot (n ~ teamname)
summary(lm(n ~ n1 + W + playoffs + WS + teams$attendance + bigmarket))
summary(lm(n ~ n1 + W + playoffs + WS + teams$attendance + bigmarket))
summary(lm(n ~ n1 + W + playoffs + WS + attendance + bigmarket))
colnames(payroll.frame)[14] <- "attendance"
View()
View(payroll.frame)
summary(lm(n ~ n1 + W + playoffs + WS + attendance + bigmarket))
attach(payroll.frame)
summary(lm(n ~ n1 + W + playoffs + WS + attendance + bigmarket))
rm(playoffs)
summary(lm(n ~ n1 + W + playoffs + WS + attendance + bigmarket))
summary(lm(n ~ n1 + W + playoffs + WS + attendance + bigmarket + 0))
rm(Payrolls, Teams)
save.image("~/Baseball/offseason/offseasonworkspace.RData")
getwd()
Colleges = read.csv("TimesCollege.csv")
View(Colleges)
names(Colleges) = c("College", "Pell1214", "Pell08", "PellChange", "NetPriceLMC", "AccessIndex", "Endowperstud")
Colleges$NetPriceLMC <- as.numeric(sub("\\$","", Colleges$NetPriceLMC))
Colleges = read.csv("TimesCollege.csv")
names(Colleges) = c("College", "Pell1214", "Pell08", "PellChange", "NetPriceLMC", "AccessIndex", "Endowperstud")
Colleges$NetPriceLMC <- sub("\\$","", Colleges$NetPriceLMC)
View(Colleges)
Colleges$NetPriceLMC <- sub("\\,","", Colleges$NetPriceLMC)
Colleges$NetPriceLMC <- as.numeric(Colleges$NetPriceLMC)
View(Colleges)
Colleges$zPell1214 = with(Colleges, (Pell1214 - mean(Pell1214))/sd(Pell1214))
Colleges$zPell08 = with(Colleges, (Pell08 - mean(Pell08))/sd(Pell08))
Colleges$zPellChange = with(Colleges, (PellChange - mean(PellChange))/sd(PellChange))
Colleges$zPellChange = with(Colleges, (PellChange - mean(PellChange)/sd(PellChange))
)
College$PellChange = NULL;
Colleges$PellChange = NULL;
Colleges$zPellChange = NULL;
Colleges$zNP = with(Colleges, (NetPriceLMC - mean(NetPriceLMC))/sd(NetPriceLMC))
Colleges$zEnd = with(Colleges, (Endowperstud - mean(Endowperstud))/sd(Endowperstud))
Colleges$Endowperstud <- sub("\\$","", Colleges$Endowperstud)
Colleges$Endowperstud <- sub("\\,","", Colleges$Endowperstud)
Colleges$Endowperstud <- as.numeric(Colleges$Endowperstud)
Colleges$zEnd = with(Colleges, (Endowperstud - mean(Endowperstud))/sd(Endowperstud))
View(Colleges)
Colleges$zEnd = with(Colleges, (Endowperstud - mean(Endowperstud, na.omit))/sd(Endowperstud, na.omit))
summary(lm(AccessIndex ~ zPell1214 + zPell08 + zNP + Endowperstud, Colleges))
summary(lm(zNP ~ zPell1214 + zPell08 + Endowperstud, Colleges))
summary(lm(AccessIndex ~ zPell1214 + zPell08 + zNP/Endowperstud, Colleges))
save.image("~/Colleges.RData")
load("C:/Users/matth_000/Documents/Baseball/pitchFX/pitchFXworkspace.RData")
2 +3
install.packages("pitchRx")
View(FourSeam)
summary(LWResults)
summary(FF.model)
getwd(0)
getwd()
rm(*)
rm(BatterData2013, PitcherData2013, all2013, i, names)
clear
source('C:/Users/matth_000/Desktop/baseballdata/retrosheet/parse.retrosheet.pbp.R')
source('C:/Users/matth_000/Desktop/baseballdata/retrosheet/parse.retrosheet.pbp.R')
parse.retrosheet.pbp(2013)
source('C:/Users/matth_000/Desktop/baseballdata/retrosheet/parse.retrosheet.pbp.R')
getwd()
setwd("../Desktop/baseballdata/retrosheet")
parse.retrosheet.pbp(2013)
parse.retrosheet.pbp(2013)
